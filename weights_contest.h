#include "nnom.h"

/* Weights, bias and Q format */
#define TENSOR_CONV1D_KERNEL_0 {-40, -40, -24, 0, 41, 89, -97, 74, -48, 31, -9, -18, -12, 88, -79, 33, 46, 23, -1, -33, -39, -37, -21, -10, 46, -16, -5, -52, -40, -21, -18, -48, -3, 41, -72, -33, -38, -44, -20, -18, -14, 11, 38, 50, 31, 2, 5, -19, -39, -47, -69, -31, 93, -106, 11, 12, 47, -53, 72, -28, -5, -31, 28, 67, 11, 46, 28, 20, 10, 42, -96, 65, 51, -73, 12, 59, -58, 76, -88, 68}

#define TENSOR_CONV1D_KERNEL_0_DEC_BITS {4}

#define TENSOR_CONV1D_BIAS_0 {11, -99, -34, -10, -47, -6, -40, -16, -41, 47, -31, -7, -44, 16, -80, 9}

#define TENSOR_CONV1D_BIAS_0_DEC_BITS {8}

#define CONV1D_BIAS_LSHIFT {3}

#define CONV1D_OUTPUT_RSHIFT {8}

#define TENSOR_CONV1D_1_KERNEL_0 {91, -8, 30, 5, 18, 58, -37, 7, 18, -32, 42, 23, -50, 37, -4, 8, 59, 29, 7, 21, 4, 28, 18, 12, 48, 47, 15, 15, -2, -20, -29, -29, -19, -6, 22, 32, -26, -8, 5, -64, -35, -35, 13, -42, -35, 19, 20, 21, 17, 6, -5, -16, -32, -29, -24, -25, -1, 13, 18, 38, 24, 9, -25, 76, -18, 24, 12, 12, 28, 7, 27, 65, 22, 24, 18, 11, -4, -19, -29, -25, -14, 34, 28, -14, 18, -26, -26, -32, 10, -13, -66, -50, 40, 49, -8, -40, 10, 5, 5, -30, -15, 29, 14, -39, 56, -51, 37, -19, -45, -35, -20, -10, -5, -2, 6, 18, 33, 63, -39, 26, 35, -52, 47, -50, 43, -19, -8, 74, -44, 77, -47, -23, 44, 34, -23, -29, -5, 15, 32, 17, 26, 12, -18, -35}

#define TENSOR_CONV1D_1_KERNEL_0_DEC_BITS {4}

#define TENSOR_CONV1D_1_BIAS_0 {-37, -17, -35, 43, -5, -9, 0, -102, -16, -61, -81, 28, -55, -9, 14, -37}

#define TENSOR_CONV1D_1_BIAS_0_DEC_BITS {8}

#define CONV1D_1_BIAS_LSHIFT {3}

#define CONV1D_1_OUTPUT_RSHIFT {8}

#define TENSOR_CONV1D_2_KERNEL_0 {-24, -15, -4, 11, 60, 11, 49, -29, -33, -76, -69, 34, 33, 14, 40, 35, -4, 13, 9, -33, -65, -65, -18, 6, 10, 40, 6, 32, 38, 27, 39, 24, 13, -46, -36, -47, -36, -10, 34, -22, -7, -18, -10, -1, -4, -9, -9, -29, -1, 39, 84, 95, 19, 20, 36, -33, 37, 22, 17, 52, 37, -30, -83, -66, -23, -18, -18, -16, 29, 45, 28, 36, -39, -7, -71, -73, 11, 53, 9, 7, 61, 63, 12, 41, 28, 5, 11, -51, -29, -53, -27, 25, -41, 19, 34, -28, 34, 16, 21, -1, 47, 1, -88, -108}

#define TENSOR_CONV1D_2_KERNEL_0_DEC_BITS {5}

#define TENSOR_CONV1D_2_BIAS_0 {-14, -11, -11, -86, -8, -25, -17, -20}

#define TENSOR_CONV1D_2_BIAS_0_DEC_BITS {8}

#define CONV1D_2_BIAS_LSHIFT {4}

#define CONV1D_2_OUTPUT_RSHIFT {9}

#define TENSOR_CONV1D_3_KERNEL_0 {1, -15, 5, -2, -9, 14, -10, -5, 0, 5, 3, -20, -2, 20, -16, 5, 18, -18, 16, -12, 1, 0, 25, -36, 21, 21, 3, -17, 17, -1, 6, 10, 25, -4, 13, -14, -3, -2, 3, 16, -5, -7, -9, 12, 27, 21, -18, 13, 8, 22, -9, -3, 3, 15, -26, -12, -4, 20, -12, 18, 10, 22, -6, -2, 1, -7, -22, 13, -6, 0, 2, 2, -1, 18, 13, 18, 23, 14, -6, -9, -2, -2, -4, 28, 15, 41, -2, 16, 22, 32, 11, -15, 20, 13, 15, -23, -3, 26, -9, 15, 32, -8, 24, 18, 20, 17, 6, 13, 16, -26, -16, 22, 7, 32, 14, 30, 24, 5, 14, 4, -9, -26, -14, -30, -24, 10, 33, -3, -15, 26, -9, -50, -15, 9, -50, -37, 27, -1, 2, 27, -23, 23, 16, -22, 23, -40, -40, -40, 28, -20, -44, 29, 7, 39, 21, 22, -19, 1, 29, 16, 42, 0, 7, 51, -27, 33, 21, 47, -9, 34, -1, 34, 32, -33, -21, -44, -17, 33, 11, 49, 20, -6, 8, 39, -10, 12, -38, 29, -36, -40, -15, 40, -21, 41, 10, -13, -4, 42, 0, -17, 36, -32, -38, 33, 42, -31, -17, -24, 49, 26, -38, -32, -13, -6, -31, 13, -13, -40, -7, -33, -42, 50, -20, -42, 8, 30, 0, -34, -12, -37, 29, 56, 24, 35, -27, 32, 30, 26, 44, -2, 43, 15, 42, 34, -16, 26, -5, -15, -34, 10, 57, -15, -34, -15, -4, 14, -29, 49, 15, 4, -41, 14, -24, 41, 22, -3, -28, 50, -57, -34, 17, -29, 17, -66, 30, -25, -44, -45, -47, -14, 12, 12, 5, -44, 23, -5, 41, -38, 26, -33, 22, 10, 28, 28, -13, 15, 18, 28, -42, -5, 12, -22, 34, -21, -21, 48, -13, 36, -58, 59, 26, -49, 5, -10, -49, -49, -18, 27, 11, 28, 20, -25, 25, -44, -45, -23, 11, -41, -18, 29, 34, 51, 42, -13, -42, 9, 0, -25, 5, -1, 46, -61, -24, 37, -18, 0, -15, 11, -32, 20, 7, -37, -47, -33, -45, -48, 31, 23, -25, 17, 16, 6, -13, 35, 52, -18, 39, 32, -9, 24, -25, -36, 31, 34, -20, -46, 5, 0, -29, 30, -31, 3, 26, -34, -37, 9, -40, -30, -29, -49, -47, 16, 30, -25, -38, -33, -3, 33, -33, 41, -16, 18, 27, 28, 12, -17, 4, -8, 23, -14, -26, -1, -7, -11, -25, -22, 19, 7, 26, 14, 17, 56, 7, 34, 38, -33, 12, -13, -9, -21, -2, 32, 40, -28, 38, 50, 49, 46, 0, 8, 9, -29, -27, 9, -22, 28, -43, -22, 16, -23, -18, 31, -32, -36, -20, -48, -13, -3, -41, 44, 41, -5, 54, 16, 47, 1, -7, -40, 25, 23, -14, 24, 8, 5, -2, -3, -32, 27, 28, -43, -10, -43, 6, 26, 14, 16, -32, 9, 42, -3, -23, 2, 8, -27, -4, -14, -64, 18, 2, 21, -6, 3, 22, -42, 27, -20, -62, -36, -18, 1, 6, -27, 29, -15, 8, 29, -8, -26, -25, 7, 22, -4, -43, -28, 2, -20, 26, 1, 41, 32, -3, 18, 34, 7, -12, -36, -30, 19, 3, 19, -41, -25, 55, -38, 42, 4, 11, -3, 42, -6, 11, 23, 52, 8, 40, -35, -28, -3, -9, 30, -19, -1, -30, 42, -6, 19, -48, 43, 38, -8, -9, -41, -13, -5, -2, 6, 21, -4, -13, 23, 34, 52, -19, -30, 13, 32, -39, -41, -16, -33, 3, -12, 34, 44, 11, 4, 0, 29, 7, -13, -10, -44, -2, 14, -34, -10, -33, 21, 9, -14, 19, -34, -12, -35, -35, -11, 0, -11, 19, -12, 5, -9, -22, -55, -6, 10, -29, -42, -26, -25, -6, -21, -19, 28, 18, -27, 13, -19, 23, 2, 40, -18, -29, 2, -30, 21, -27, 1, -14, 30, -4, -29, -6, -18, -11, -14, -19, -22, 34, 31, -9, 8, 8, -2, -6, 20, -38, 29, 23, -15, -13, 13, 31, 28, -19, 12, -15, -17, 4, 23, 48, 16, -20, -22, 26, -9, -28, 5, 40, -8, -27, -3, 33, 44, 12, -14, 6, 43, 18, -10, -16, 18, 24, 3, 19, -1, -11, 26, 57, -26, 2, 40, -3, 35, 20, -8, 35, 50, 7, 27, 36, -22, 23, -38, 34, 18, -46, 34, 42, 40, -59, -44, 20, 20, 2, -13, -59, 21, -20, 16, -20, -5, -45, 3, -1, 2, -26, -44, -10, -18, -5, 23, -31, -28, 19, 39, 22, 23, -3, -51, 13, -45, -42, 11, 47, 25, -39, 46, 3, -8, -23, 12, 32, -10, 28, 20, -23, -9, -14, 42, -13, -12, 56, -7, 17, 30, -23, 12, -19, -56, -51, 0, 23, 35, -27, -27, 3, 51, -34, 29, 9, 28, -6, 21, 10, 20, -47, -3, 7, 40, -29, -34, 28, 14, -20, -40, 17, -9, -46, 5, -39, 46, 54, 32, 40, 10, 15, 21, -8, -18, -20, -33, 44, -29, 59, 48, 34, -22, 20, -21, -17, -67, 2, -34, 20, -9, 52, -23, 15, -66, 69, -20, -29, 15, -19, 11, 49, -25, -24, -18, -9, -59, 31, -28, 21, 51, -27, 4, 53, -8, 43, 69, -10, 1, -52, 64, 18, -38, 53, -20, 5, -64, -63, -36, 34, 44, 60, -52, 61, 55, -31, -29, -65, 64, -72, 51, -8, -29, 53, -67, -13, -40, -34, 3, -31, -45, -7, -28, 51, -6, -17, -24, -66, 20, 3, 7, -46, -63, 18, 12, -67, 5, -49, -57, 39, 34, 49, -14, -27, 34, -23, -16, 44, 48, -68, -53, 6, 72, 54, -37, 1, 67, -74, 71, 16, 15, -63, -28, -11, 24, -20, -13, -35, 39, 18, 72, -3, -32, 28, 46, -6, 37, 16, -2, -18, 26, -8, 9, 25, -53, 38, 42, -5, 29, 23, 8, 29, 7, -8, -38, -21, 28, 13, 17, 19, -34, -3, -15, 34, 38, 32, -27, -42, 15, 5, 30, -24, -37, 31, 8, -12, 15, 31, -5, -17, -17, -34, -49, -9, 13, 7, 50, 13, -11, -29, 21, 43, 57, 37, -31, -22, -11, -9, 51, -19, -20, -7, 34, 21, -6, 44, -5, 21, -22, 21, -1, 44, 29, 0, 37, -17, -28, -30, 0, 14, -9, -3, -3, -14, 29, -38, 47, 11, 0, -4, -32, 35, 54, 47, -6, 12, 44, 15, 50, -10, 2, -8, 16, 23, 29, 10, 16, -6, -14, -15, -25, 27, 39, 7, 47, -5, 1, 16, -9, 4, 21, 2, -11, 5, -12, 21, 20, 11, 4, 34, 0, 33, 11, 2, -4, 12, 27, -18, 41, 9, 33, -4, 15, -2, 15, 7, -7, 9, -11, 27, -19, 11, 5, -3, -2, 18, 31, 33, -13, 18, 22, 21, 0, 12, 11, 25, 3, -9, -4, 19, -4, 20, 25, 13, -9, -8, 12, -3, 22, -9, 24, 0, 27, -1, 25, 23, 23, -13, -7, 1, 26, -8, 13, 7, 27, -3, -11, 1, -32, -8, 25, 47, -7, 21, 0, 20, -3, -12, -11, -10, 8, 20, 0, 26, -1, 28, 20, -22, 23, 22, -13, -22, -9, 29, 4, 23, 21, 6, -7, 14, 38, -2, 6, -1, 22, 11, 31, 42, -26, 17, -11, -7, -17, -35, -35, 21, 3, 31, 21, 5, -7, -16, 37, -27, -11, -24, -24, 8, -26, -6, -30, 9, 1, -30, 19, -7, 28, -31, -21, -42, 33, -5, -33, -3, -23, -22, 0, 32, -32, -26, -11, -18, 16, -43, 19, 43, -10, 18, -36, 33, 33, 35, 33, 12, 6, 43, -45, 16, 3, -44, 8, -33, -26, -41, -22, 3, -38, 12, 10, -45, 27, -28, 30, -16, 20, -30, 40, 21, -42, -15, -17, 29, -15, -25, 5, -18, -2, 30, -2, 43, 49, 32, 17, -38, -38, -7, -50, -19, 36, 5, 31, -14, -16, -29, 14, 34, 3, 6, -6, -9, -13, 26, -4, -40, -19, 38, -4, -12, 32, 31, 38, 57, 62, -2, -17, 15, 25, 13, 27, 7, -14, 14, 4, -24, 38, 31, 46, 25, 13, 31, 32, 11, 14, 71, 24, -25, 3, 17, 15, 11, -12, -43, 21, 20, 17, 0, -4, -43, -24, -11, 16, 7, -25, -34, 26, -11, -2, -25, -12, -3, -19, 24, 8, 47, 5, 10, -17, 6, 2, 41, 4, -5, -4, 44, 21, -15, -46, -4, 19, 23, 44, -51, -47, -15, 12, -37, -1, -45, 21, 29, -2, -24, 12, -30, -1, 1, 19, -7, 7, -18, -23, -3, -20, 38, -5, 18, 15, 24, 7, -19, -13, 0, -54, 45, -30, -20, -38, 4, -31, 10, 30, 28, 7, 12, -6}

#define TENSOR_CONV1D_3_KERNEL_0_DEC_BITS {9}

#define TENSOR_CONV1D_3_BIAS_0 {-74, -2, 23, -13, -2, -8, -2, 38, -103, -121, 21, -80}

#define TENSOR_CONV1D_3_BIAS_0_DEC_BITS {7}

#define CONV1D_3_BIAS_LSHIFT {5}

#define CONV1D_3_OUTPUT_RSHIFT {9}

#define TENSOR_GRU_GRU_CELL_KERNEL_0 {31, -23, 5, 16, -21, -9, -49, 29, 24, -34, -31, -36, -20, -27, -33, 16, 25, 19, 34, -36, -8, 33, 3, -12, 13, -2, -9, 14, -37, 13, -12, -23, 15, -14, 47, 33, 6, -33, 6, -10, 18, 40, -32, -46, 5, -36, -25, -1, -38, -48, -26, -35, 30, -49, -3, -55, 43, 22, -15, -14, -30, 32, -14, -5, 9, -27, 0, -5, 22, -47, -1, -7, -61, -49, -7, -31, -35, 1, 28, 31, -13, -41, -60, -78, 17, 5, -3, -21, -8, 33, -33, -40, -21, -25, -43, -46, -23, 35, 31, 28, -7, 5, -44, 17, -6, 46, 23, 21, 40, -3, -3, 15, -25, -2, 1, -29, 3, -36, -7, -12, -22, 15, -24, 25, 7, -7, -5, 20, -2, 45, -29, 14, 27, 33, 32, 6, -3, 37, -41, 17, 2, -10, -11, -33, -33, 60, 11, -8, -19, -5, 29, 15, -4, -13, 20, 15, 10, 32, 33, -10, -23, -21, 3, -24, -14, 13, 29, -30, -28, 5, 29, 1, -14, -5, -16, -20, -15, 32, 25, 44, -6, -43, 18, 0, -33, -3, 18, 23, 37, 38, -30, -8, -14, 31, 55, -12, -16, 8, -11, 3, -31, 18, 64, 39, 29, 28, 4, -36, 48, 2, -8, 39, -19, 9, 3, 19, 13, -20, 24, 28, 7, -15, 1, 24, -13, 15, 9, -11, -64, 29, -30, 56, -22, 38, -35, -6, -8, -11, -10, 16, 23, 9, 64, -48, 27, -21, -21, 12, -8, 80, 72, -25, -20, -5, 14, -4, 69, -32, 17, 23, -22, -14, 35, -15, 21, -8, 4, -22, 2, 32, -26, 5, 26, -21, -1, 6, -23, 35, -11, 24, 41, 86, 16, -28, -6, -7, 45, 9, 22, 44, 37, 35, -46, -15, 6, 3, -20, 47, -17, -3, 76, 77, -29, -7, -14, -22, -28, -36, 14, -13, 5, 14, 22, 37, -7, 59, -43, 38, 4, 54, 52, 28, 14, -2, -46, -1, -28, -48, 22, 82, -6, 15, 65, 30, 31, 3, -61, -58, 23, -4, 3, 27, -40, 8, -33, 2, 4, -39, 8, 68, 28, 42, -14, 18, -42, -36, -34, 10, 22, 26, -15, -44, -4, 19, -2, 7, -21, 25, 17, -15, -20, -5, -10, -31, -15, -27, 20, 38, -39, -5, -30, 14, -33, 0, 39, 43, 33, 30, 34, 1, 33, 26, 26, -38, 24, 24, 29, -35, 42, 18, 41, 0, 4, 3, 41, -19, 40, -7, -5, -12, -27, -17, 16, 1, 37, -28, -23, 23, 50, 2, -32, -21, -33, -35, 36, 6, 27, 14, -23, 41, 43, -11, 7, 11, 1, 36, 42, -19, 16, -9, -4, 0, 0, 27, -14, 3, 32, 28, -4, 46, -49, -6, 44, -21, 8, -55, -29, 41, 7, -22, 17, -35, -34, 7, -1, 23, 11, 21, -9, 36, -26, 6, 26, -17, 19, -34, -31, 34, 26, 19, -30, -2, -15, 10, 41, 2, 41, 16, 30, 34, -7, 3, -20, -12, 9, 41, -1, 22, -9, 17, 20, 5, -5, 41, -22, -17, -25, -9, -2, 21, 18, 22, 23, 29, 4, -43, -12, -12, 39, -18, -12, 14, -57, -17, -20, -31, 61, 51, 21, -15, -6, 28, 30, 8, 15, 35, 23, 22, 13, 17, 29, 8, 6, 24, -27, 25, 37, 22, -18, 24, 22, -10, -25, 22, 14, -16, -38, 16, -25, 9, 10, 23, 12, -4, -41, -14, 21, 19, 32, 11, -11, 32, 37, -29, 6, -37}

#define TENSOR_GRU_GRU_CELL_KERNEL_0_DEC_BITS {7}

#define TENSOR_GRU_GRU_CELL_RECURRENT_KERNEL_0 {-23, -24, 6, 19, 9, 17, -8, -3, -7, 0, -1, 6, -34, 16, 38, 16, -12, 41, -25, 25, -17, -11, 4, 22, -24, 8, 12, -3, 1, 51, 25, -9, 43, 34, -11, 10, -2, 47, -10, 18, -34, -6, -44, -20, 0, -12, 2, 7, 4, -5, -19, 2, -1, 32, 11, 18, -7, 0, 6, 19, 35, 23, 9, -3, 18, 18, -25, 19, 24, 27, 28, -40, 6, 5, -1, 7, 8, 33, 7, 3, 39, 0, -8, 13, -6, 0, 36, 20, -23, 39, 2, 50, 0, 0, -25, 40, -19, -36, 11, 13, -10, 13, 4, 53, 1, 3, 15, 2, 13, -2, -20, -36, 25, -57, -17, 33, -25, 3, 22, 19, 12, 2, 8, 30, 19, 26, 27, 25, -23, -5, -16, -5, 35, 18, 16, -12, -24, 2, -1, -17, -9, -23, 1, -6, -16, 42, -29, -9, 32, 17, 18, 44, -54, 22, -6, 15, 7, -8, -13, 24, 38, -57, 26, 13, 19, 32, -11, 23, -14, 21, -35, -4, 6, -6, -34, 9, 23, 8, 17, 9, -2, 12, -21, -2, 20, -11, -8, -12, -20, 5, 3, 5, -7, 15, -55, -25, 14, 32, 4, 4, 2, -18, 8, 41, -9, 13, -17, 5, -51, -20, -25, 11, 51, -3, -11, 36, -12, 6, -10, -11, 6, -30, 27, 33, 2, -17, -13, 29, -28, 2, 9, -4, -24, 18, 33, -6, -10, 17, -5, -17, -55, 12, -11, 23, -20, -31, -17, -16, -20, -21, 9, 30, 7, 11, 23, 5, -14, 36, 16, 10, -4, -5, 1, -11, 51, 24, -27, -54, -3, -28, -8, -4, 22, 14, 21, -25, 22, -24, -30, 7, 39, 32, -19, -24, -15, -38, -10, -15, 11, -4, -15, 6, 10, 30, 11, 34, -28, -7, 14, 70, -23, -27, -18, 14, 15, -9, 52, 28, -8, 2, 6, 14, -6, 6, 48, -11, -33, -28, -16, 13, 22, 11, 30, -22, 29, 7, -41, -2, 41, 5, 17, -17, 20, -4, 9, -5, -11, -16, 50, -9, -14, 28, 18, 2, 28, -6, -64, 4, -26, 0, 15, -4, -22, 44, -39, 7, 7, 24, 15, -54, -6, 29, 33, -15, -7, 16, -20, 16, 15, 26, -12, -17, 25, -29, 2, 44, -4, 24, 53, -22, -20, 9, -21, 22, 16, 8, 24, -14, -5, 34, -34, 28, -24, 18, -35, 9, -13, -12, -22, 6, 9, -56, -2, 5, -28, -36, 44, 1, -5, -40, 8, -43, -7, 26, 15, -3, 22, 40, -1, 41, 6, -9, 6, 49, 21, -25, -41, 12, -33, 12, -8, -26, 23, 25, 14, 15, 0, 23, -28, 30, 21, 28, -6, -11, 1, 28, -10, -43, -31, 28, 13, -13, 14, 28, -47, -27, 36, 2, -14, 14, -19, 26, 37, 1, 28, -32, -15, -2, 10, 0, -6, -13, 9, 28, 18, 37, -26, 5, -1, -5, -28, 4, -23, 10, -6, -8, 7, 31, 10, -9, -11, 31, -11, -22, -14, -10, 2, 21, 30, -22, 53, -6, 20, 17, 7, -3, 20, -21, 26, 41, -13, -6, -13, 9, -22, 22, 39, 31, 13, -30, 10, -15, 17, -6, 5, 3, -7, -20, -55, -21, -15, 47, -50, 3, 7, -11, -12, -12, -22, 0, 11, 22, -30, -10, -7, -28, 23, -21, -21, -10, -4, 7, 6, -24, 11, 26, 10, -15, 5, 8, 12, 35, -8, 54, 14, 4, 6, 25, -16, -6, -43, -11, -21, 12, 9, -20, -47, 24, 42, 49, 35, -5, 44, 23, -8, 53, -14, 27, 39, 1, -19, -31, 1, -38, 8, 46, -11, 41, 17, 48, 11, 6, -8, -15, -10, -5, 18, 20, -15, 3, -7, -23, -8, 7, -1, -13, 34, 45, 23, 62, 10, 38, 24, -14, 6, -20, -1, 19, 52, -9, 12, -5, -20, -23, 70, -17, 10, 27, 11, 5, -36, -13, 7, -7, 32, 4, 1, 16, 20, -16, -47, -23, -2, 37, -6, 15, 24, -29, -11, -51, -17, -26, 52, 39, 5, 18, 4, 43, 17, -14, -12, -28, 9, 8, -29, 4, -41, -60, -3, 39, 13, -29, -62, -51, 12, -10, 35, 44, 0, -16, 12, -38, 4, -4, 17, -7, 28, 10, -8, -4, -1, 22, 30, -22, 30, 2, -25, -14, -17, 2, 3, -8, -18, 14, -6, 3, 6, -10, -12, 6, -46, -10, 5, 29, 19, -22, -12, 83, -34, 36, -42, -43, 1, 18, 34, -29, -2, -36, -6, -8, -3, 8, -14, -26, 12, 27, -1, 7, -10, 33, -30, 36, -7, 29, -9, 8, -3, -20, -18, 20, 22, -3, 27, 19, 24, -14, 13, 1}

#define TENSOR_GRU_GRU_CELL_RECURRENT_KERNEL_0_DEC_BITS {7}

#define TENSOR_GRU_GRU_CELL_BIAS_0 {9, -17, -19, 38, 74, 9, -20, 38, 7, -2, -12, -41, 2, -58, -2, 9, 19, 21, 19, 13, 20, 104, 11, 18, 17, 84, 97, 88, 24, 33, 29, 70, 0, -3, -2, 3, -6, 2, 3, -3, -4, -2, -1, 1, -8, -2, 0, -7, 9, -17, -19, 38, 74, 9, -20, 38, 7, -2, -12, -41, 2, -58, -2, 9, 19, 21, 19, 13, 20, 104, 11, 18, 17, 84, 97, 88, 24, 33, 29, 70, 2, -2, -4, 4, -9, 2, 3, -1, -3, -3, 0, 1, -9, -1, 0, -8}

#define TENSOR_GRU_GRU_CELL_BIAS_0_DEC_BITS {8}

#define GRU_BIAS_LSHIFT {2}

#define GRU_OUTPUT_RSHIFT {3}

#define TENSOR_GRU_1_GRU_CELL_1_KERNEL_0 {10, 14, 18, 18, 38, 3, 8, 22, -13, 32, 20, -23, -23, 8, -2, -17, 9, 10, 26, 29, 22, 42, -10, -42, -39, -33, 20, 16, -34, -3, 2, 11, -21, -9, 15, -28, -13, -21, -9, -8, 16, 4, -59, -19, -40, 12, -15, 17, 3, -28, -45, -25, 32, 17, 13, 41, 35, -15, 17, 3, -33, 18, -31, 22, -1, 7, -5, -19, -9, 13, 26, -43, -10, -38, 10, -33, 38, 3, -36, -25, -5, -13, -34, 4, 8, 8, 26, -13, 14, -5, 48, -28, -33, 0, 0, 31, -4, 35, 15, 20, -20, 3, -4, 44, 26, 9, -11, -2, -15, 25, -31, -2, 7, -19, -9, 33, 3, 56, 31, -30, 43, -3, -33, 16, 3, 9, 13, -26, 1, -2, 12, -36, 18, 9, 2, 22, 12, -12, 4, -6, 8, -26, 20, -30, 26, -6, -31, -3, -29, 48, 1, -16, -12, 4, -18, 21, -13, 35, 24, 4, 11, -9, 27, -13, 14, 25, -34, 37, 3, -4, -15, -51, -41, -5, -2, -20, -13, 51, 28, -40, 1, -17, 11, 12, 8, -11, -6, 17, 3, 35, 7, 20, -24, -4, 42, 59, -2, -4, 30, -9, 38, -1, 36, -28, -39, -16, -54, -3, -35, 40, 1, -9, 32, -21, -31, 13, 37, -13, -32, -5, -18, -25, -18, 2, 10, -50, -8, 38, 54, 28, 22, -20, 23, 8, 13, 13, 19, 23, -47, -33, 10, 1, -15, -7, -2, 0, 25, 0, -26, 31, -12, 23, -5, 4, -7, -31, 43, 7, 47, -13, -15, -23, -21, 24, 62, -33, -28, -23, 7, 33, 11, -6, -18, -38, 16, 14, -20, -7, 46, 43, 51, 21, -17, -9, 32, 11, 5, -26, -9, 29, 4, 41, -9, -15, 35, 1, 33, -1, 33, -26, 34, 11, -44, 7, -15, 42, 30, -1, -8, 21, 13, 23, 5, -9, 42, -48, 33, -6, 3, 54, 2, 13, 55, 5, -2, 8, -22, -25, 30, -10, -58, -59, -7, -55, 60, 45, 6, -11, 82, 35, 34, 34, -79, -68, 55, 8, -9, 12, -33, -60, 25, -31, -30, -39, -6, 8, -10, 43, 41, 42, 86, 51, 17, -14, -50, -81, 3, -25, -3, -1, 21, 40, 8, 35, -49, -25, -32, -24, 12, -19, 47, 25, -60, -13, -34, 17, -84, -83, -9, 30, -79, -21, -43, -41, 49, 5, -44, -42, -10, 7, 10, -26, -9, -28, 12, 42, -43, -32, -77, -12, 5, 25, -72, -22, 26, 30, -8, 32, 3, 33, 43, -33, -10, 5, -64, -67, -43, -48, -46, -48, -44, -20, 9, 23, 3, -46, 5, -29, -4, -21, 6, 7, -13, 11, 18, -8, 0, -18, -17, 35, -29, -46, -40, 28, 1, -26, 2, -14, 9, -28, 17, -2, 2, 1, -23, 12, -20, 8, -17, 9, -75, -3, -59, -12, -1, 14, -69, -56, -36, 7, -8, 30, -5, 22, 29, 0, 1, -2, -41, -22, -70, -17, -28, -53, -17, -21, 45, 57, -51, -35, -9, 34, -16, -42, 46, 21, 1, 6, 29, 41, -33, -52, 33, -39, 19, 15, 2, -14, 38, -10, 26, -32, 14, -25, 18, -14, 7, 30, 33, -17, 33, 24, 30, -31, 7, 47, 30, -17, -7, -20, 33, 13, -33, -27, -36, 2, -1, 30, 32, -15, -29, -19, 17, -14, -16, -17, 1, -22, 14, 10, -15, -20, -7, 6, 26, -16, 38, -22, -11, 11, 29, 37, 33, -12, 24, 3, -26, 28, -32, 36, 32, 16, 16, -43, 34, 2, 36, -6, -19, -32, 17, 20, 21, 18, 20, -9, -22, 41, -18, 1, 20, -6, 14, 9, 23, -15, 12, -7, 5, 17, 26, 0, 24, 18, -28, -19, 26, 12, 2, 15, -2, -43, 14, -33, -22, -19, 10, -7, -15, -22, 4, -28, -17, -36, 15, 33, 26, 26, -37, 9, 22, -50, -18, -22, 19, -32, -36, 35, 13, -16, -3, -31, 1, 7, 25, -7, 17, 25, -6, -40, -15, -22, 27, 43, 30, 36, -9, -7, -1, 3, -10, -33, -18, 35, 19, 27, 32, -13, -18, -23, -20, -13, 7, 21, -27, -24, -12, -12, -5, -24, -3, -13, 45, 42, -13, -31, -24, 27, 26, -39, 14, -33, 8, -18, -30, -6, 27, -28, -11, 22, -14, -22, 30, -33, 36, -15, -18, -25, -18, -12, 25, -19, -15, 1, -21, -17, -7, -22, -14, -12, -16, 10, -38, -36, 31, 30, 19, 19, 34, -10, 1, -17, 30, -8, 32, 31, -14, 2, -40, 22, -41, 11, 10, -16, -38, 37, 2, 33, -45, -9, -7, 8, 26, 16, 24, -20, -29, -2}

#define TENSOR_GRU_1_GRU_CELL_1_KERNEL_0_DEC_BITS {7}

#define TENSOR_GRU_1_GRU_CELL_1_RECURRENT_KERNEL_0 {-20, 30, 19, 7, 14, 1, -21, 12, 3, 17, -4, -4, -20, 23, -41, 0, 23, 20, 14, -20, -2, -12, -12, -10, 18, 8, -4, 20, -46, -12, -5, -27, -4, -33, -4, 6, 12, -23, -15, 12, 17, 7, 10, 12, 55, 7, -14, 23, -1, 3, -10, 35, 24, -20, 15, 13, 19, -38, 33, 5, 2, 19, 0, -7, 1, -29, -13, -4, 3, 20, 1, 4, 1, 8, 45, -1, 13, 26, 33, -7, -15, -2, -13, -25, 10, 33, 6, 14, 25, 26, 4, 30, -11, -2, 24, 5, -19, -4, -14, 18, -54, -19, -12, -23, 31, -35, -13, -18, -9, 35, -31, -26, -35, 29, -14, 45, 26, -33, 10, -6, 39, 15, 10, 2, -22, 5, -3, 14, -7, -31, 13, 0, -52, 46, -4, -41, -27, -7, -10, -25, -28, 14, 21, 2, 29, 9, -52, -6, 9, -8, 14, 27, 24, -11, -25, 15, 0, 12, -11, -18, 11, 10, 37, -34, -6, -13, 17, -20, 3, 12, 29, -22, 3, -21, -37, 22, -13, 10, 12, 19, 4, 8, -8, -14, 11, 56, 8, -11, 15, 13, -9, -6, -1, -6, 6, -41, 18, 1, -15, -34, 33, 21, -19, -21, 15, 28, -12, -22, -10, 11, 9, 57, -19, 39, -32, 19, 3, 8, -41, -41, -12, 3, -34, -31, -29, 18, 2, 7, -6, -34, -24, -32, 42, -18, -45, -25, 25, -12, -29, -8, 1, -42, 38, 30, -15, -23, -10, 11, -24, -24, 7, -39, -6, -18, -2, 13, 67, -19, -19, 43, 0, 11, -3, -6, 40, -33, 14, 9, 37, 51, -31, 54, 13, -14, 17, -7, -21, 23, -9, 25, -20, -7, -19, 22, -14, 21, 23, -9, 0, 5, -1, 20, -3, 0, 9, -32, 35, 10, 24, -1, -8, 28, -16, -14, -11, 30, 2, -14, -9, 14, 9, 33, -36, 34, 19, -29, 26, -15, -24, -2, -4, 5, 0, 3, -7, -13, 20, 2, 61, 8, 11, -14, -72, -34, -27, 15, 15, -20, -11, -2, -13, -4, -28, -19, -16, 10, -55, -7, -13, 14, 57, 16, -24, 2, -34, -27, 10, 42, 9, 58, -17, 7, 19, -1, -35, -20, -46, -25, -23, 13, 5, 15, 9, -12, -51, -20, -56, -10, -17, 5, -2, 16, 5, 8, -19, -9, 42, 26, -40, -20, 15, 29, -13, -16, -6, -52, -7, -2, -21, 28, -28, 12, -51, -36, 5, 0, -23, 9, -20, -9, 42, 44, -50, -26, 43, -1, 42, 34, 35, 17, -1, -23, 23, 5, -24, 4, -21, -34, -29, 16, -1, 1, 26, 12, -24, -24, 10, 20, -27, 7, 44, 54, -11, 52, -3, -8, 53, -3, -25, -8, 29, 15, -52, 17, 14, 27, -47, 17, -1, -22, -20, -21, 7, 1, -27, -43, -41, -15, -27, -46, 12, -14, -43, 15, 74, 0, -5, -34, 23, 9, 33, 2, 48, 24, 8, 19, 56, 5, -27, 3, 12, -7, -6, -44, -8, -24, 23, 64, -12, -25, 7, 10, 17, -5, 40, 18, 30, 26, 24, 38, 46, 36, 23, -24, 14, -2, 44, 22, -26, 15, -18, 5, -17, -28, 40, 27, 9, 5, 29, 15, -65, -38, 0, -7, -41, 24, -36, 0, 22, 18, -14, -36, 1, 2, -7, 17, -2, 46, -11, -37, 24, -11, 26, -26, -37, -22, 7, 39, -5, 5, 55, 36, -34, -63, 4, 10, -35, 18, 18, 15, 39, 13, 12, -20, 0, -3, 7, 23, 48, 22, 22, -26, -46, -25, 12, 2, -29, 10, 4, 4, 1, -28, 3, -35, -32, 2, 0, -12, 13, 10, -16, 25, 23, -16, 64, 1, -17, 65, 32, -40, 42, -29, -28, -1, -51, 46, -37, 52, -18, -24, 49, -22, 11, -14, 22, -46, -42, 42, -14, -24, 32, 24, -3, -40, 35, -5, -26, 41, 32, 4, -11, -50, 19, -15, 62, 12, 14, -12, -27, -42, -7, 13, 17, -20, -7, 7, -10, -81, 22, 0, 59, 6, -12, -4, 5, 18, 3, 31, -4, -5, -46, -4, -9, 2, 52, 32, -12, -22, -48, -28, -55, -69, 6, 6, 8, 33, -11, 14, 19, 22, 15, 2, 13, -14, 19, 34, 26, 15, 13, 24, -14, -7, -16, -11, 8, 5, 40, -29, -1, -23, -38, 8, -11, 35, -14, 7, -40, -18, 11, 10, 24, -5, 15, 17, 7, -1, 1, -7, -33, 25, 30, 10, -31, -17, 11, 38, 5, 16, 54, -34, 7, 3, 45, 8, -25, 69, 1, 29, -11, 3, -24, -6, 41, 11, -41, 3, 27, -22, 15, -3, 6, -39, 1, -28, -1, 39, 10, 32}

#define TENSOR_GRU_1_GRU_CELL_1_RECURRENT_KERNEL_0_DEC_BITS {7}

#define TENSOR_GRU_1_GRU_CELL_1_BIAS_0 {43, 47, -11, 123, 107, 101, 29, -31, -31, -47, -49, 3, 98, 51, -4, -10, 77, 40, 26, 46, 74, 74, 81, 24, 19, 92, 74, -5, 47, 80, -1, 4, 5, 11, -1, 20, 5, -17, 7, 1, 2, -3, -4, 5, -1, -2, -4, 1, 43, 47, -11, 123, 107, 101, 29, -31, -31, -47, -49, 3, 98, 51, -4, -10, 77, 40, 26, 46, 74, 74, 81, 24, 19, 92, 74, -5, 47, 80, -1, 4, 6, 12, 0, 24, 6, -15, 5, 2, 1, -5, -4, 6, 1, -2, -2, 0}

#define TENSOR_GRU_1_GRU_CELL_1_BIAS_0_DEC_BITS {9}

#define GRU_1_BIAS_LSHIFT {5}

#define GRU_1_OUTPUT_RSHIFT {7}

#define TENSOR_DENSE_KERNEL_0 {3, 30, -17, 4, -21, 4, -4, -10, -17, -16, 11, 12, -13, 4, 8, -10, 19, -20, -7, -4, -12, 8, -20, -3, 12, 2, -5, 9, 7, -16, -15, -5, 28, -3, 29, 2, -2, 14, 2, -14, 0, 0, 4, -30, 13, -27, 2, 3, 12, -13, 0, 18, -10, 11, 17, 1, 4, 10, -19, 2, -15, 8, -2, -16, -16, 22, -7, 16, -1, -13, 18, 12, 22, 0, 24, 13, 11, 9, 1, 12, 3, -15, 8, 13, -16, -15, 0, 20, 7, -24, 28, -18, -11, 15, 1, -2, -2, -23, 0, 20, -11, 11, -13, -6, -4, 4, 11, -6, -13, 1, -16, -13, -3, -3, 1, 15, -56, 6, 0, -4, 16, 6, -13, 8, -4, 28, -12, 11, -10, 4, 5, 17, -20, 23, 18, -18, 7, -21, 3, -6, -1, 18, -12, 11, -18, -1, 0, -21, -18, 21, 13, -20, -1, -13, 1, 3, 25, 4, -12, 3, 4, -14, 4, 11, -37, -22, -3, -17, -24, -15, 20, 12, -22, 6, 3, 5, 10, -24, 41, -12, 7, 23, 15, -11, -9, -27, 14, -20, -13, 18, -7, 18, 12, -19, -3, -12, 7, -9, 12, -15, -22, -10, 23, 0, -12, 14, -4, 14, -10, -32, -13, -2, -14, 2, 25, -9, -7, 3, 40, -31, 0, 27, 1, -16, -19, 10, 34, -24, 2, 20, 28, 11, -14, -31, 18, -2, -29, -2, -10, 6, 0, 13, 14, 6, -23, 7, 19, -10, -9, -18, 3, -1, -27, -13, 10, -20, 1, 1, -17, -12, -28, -8, 13, -4, -44, 5, 23, 20, -22, 22, -17, 10, -7, -24, 16, 17, 5, 9, 47, -1, 2, -14, 9, -1, -12, 9, -6, -1, 8, -5, 13, 5, -12, 28, 18, 3, -21, -27, 11, 26, -8, 20, -21, 0, -3, -33, 23, -10, -16, 16, 17, 2, -38, -28, -21, 6, -45, 16, -17, 11, 19, 0, 24, -18, 7, 4, 22, -13, 16, -4, 17, -10, -16, -2, -13, 14, -17, -8, 7, -5, 12, 28, 33, 17, -26, -13, 5, -3, -34, 1, -19, 9, -12, -25, -7, 12, -11, 3, 23, -18, -7, -3, 20, 0, -20, -17, 6, 6, -1, 3, 4, 3, -16, -3, 32, 3, -24, -26, 17, 13, -19, 11, -35, -10, -10, -31, 2, -13, -3, 0, 26, -2, -14, -17, 45, -21, -29, 16, -24, -11, 4, 8, -5, -16, -23, -13, 55, 7, -2, -6, 42, -11, -31, 14, -10, -3, -12, -12, 27, -19, -8, 9, 37, -2, -4, -27, 5, -3, -17, 26, -17, 11, 1, -15, 8, 3, -17, 22, 27, -19, -6, -9, 27, -6, -37, 13, 3, -15, -12, -1, -9, 12, -20, -4, 8, -16, 5, 1, -5, 6, -10, 18, -15, 1, -4, -23, -5, -26, -24, 7, 32, -16, -35, -11, 22, 3, -46, 17, -18, -14, -5, -19, 9, 12, -26, 7, 15, -12, -18, -8, 26, -13, -8, -4, -21, -15, -10, -10, 3, -19, -15, 1, 38, -2, -10, -1, 7, 6, -21, 28, 3, -7, -19, 1, -22, -13, -6, 16, 25, -13, -20, -21, 29, -16, -36, 41, 1, -22, -15, -14, -6, 1, 4, -9, 36, -9, -19, -5, 35, -3, -38, 23, -2, -2, -14, 4, 20, -18, -12, 31, 35, 11, -38, -35, 21, -10, -7, -20, 2, -21, -4, -5, 10, 10, -13, 25, 23, -13, -12, -14, 16, 24, -23, -18, -15, 11, 1, -10, 31, 12, 4, 24, 44, -14, -46, -16, 14, -1, -29, 18, -2, 3, 29, -9, -7, -20, -25, 1, 36, -8, -10, -1, 31, 20, -14, -14, -1, 4, -4, 4, 17, -19, 2, 17, 11, -9, -23, -32, 18, -9, -33, 31, -19, 11, 7, -20, 0, -16, -1, -6, 39, -12, -8, -19, 26, -18, -52, -8, -23, -18, -19, -39, -15, -19, -9, 3, 28, 6, -21, -45, -5, 3, -22, 17, 2, -11, -2, 5, -21, -7, -13, 23, 37, 11, -42, 6, 20, 6, -33, -1, -12, -4, -23, -15, -18, -3, 1, 3, 33, -13, -9, -22, 22, -7, 0, 21, -12, 1, 18, 8, 8, -26, -23, 5, 19, -7, -25, -18, -21, 13, -20, 12, 2, -4, 0, -27, 13, 5, -4, 9, 44, -6, -20, -21, 16, 15, -35, 3, 10, 5, -22, -23, 23, -22, -14, 14, 29, -10, -23, -7, 22, 0, -33, 29, -16, -9, -11, -22, 1, -19, -12, 12, 14, -14, -20, -13, 23, 21, -10, -7, -5, 7, -1, -5, 5, -3, -4, 15, 33, -13, -3, -43, -3, 2, -30, 29, -25, -16, -16, -2, 2, 6, -24, 19, 5, 4, 5, -21, 35, 14, -31, 15, 2, -3, -18, -23, 9, -21, -17, 12, 17, -19, -12, -20, 17, -15, -24, 12, -14, -3, 0, 2, -22, 8, -14, 7, 31, -4, 6, -19, 7, -3, -32, 12, 13, -7, -23, -16, -8, -14, 28, -19, 18, -8, -26, -22, 28, -16, -37, 24, 1, -22, 3, -23, -2, -2, -35, -3, 30, 11, -28, -23, 6, -5, -5, 5, 26, -8, -7, -10, -24, -11, -3, 2, 32, 6, -40, -16, 14, 28, -22, 12, -16, 3, -12, 2, 5, -16, -11, -15, 16, -2, -10, -19, 22, 19, -9, 7, -15, -7, 11, 0, 0, 5, -29, -1, 39, -6, -22, 5, -6, -1, -24, 8, -21, -3, 1, -20, -5, -18, -27, 4, 3, -21, 5, 0, 8, 6, -30, 11, -38, -2, -12, -20, -4, -5, -17, 16, 51, -19, 0, -18, 25, -12, -26, 2, -4, -3, -8, -10, 0, 16, 18, 20, 18, -14, -6, 1, 7, 0, -39, 28, -27, -9, -3, -4, 2, -5, -13, -19, 53, -3, -10, -14, -5, -14, -17, -14, -2, 9, -8, -16, 4, -6, -18, 8, 31, -6, -39, -11, 25, 5, -33, 6, -5, -5, -7, 3, -3, -7, 15, -8, 5, -19, -3, -37, 15, 6, -31, -10, -8, 22, -20, -3, -1, -25, -22, 3, 23, -12, -44, -11, 16, 5, -23, -16, 9, -27, 7, -22, -8, -24, 4, 10, 32, 1, -13, -30, 7, -9, -13, 4, -12, -27, -21, -16, 3, -13, -28, 32, 24, -12, -4, -38, 0, 0, -46, -6, -17, -23, -7, -24, 4, -11, 0, 1, 51, 0, -22, -30, -5, 9, -23, 33, 3, 10, 9, -24, -8, -13, -7, 24, 42, -12, -29, -31, 15, 18, -33, -4, -27, 6, -4, -13, -3, -4, -5, 9, 23, -33, -6, -16, 17, -18, 2, 17, -1, 1, 11, -10, 0, 9, 17, 9, 18, 2, -21, -24, 27, -7, -25, 14, -10, -3, 4, -22, -5, -11, -9, 9, 37, 5, -42, 10, 25, -5, -4, -3, 7, -13, -16, -6, -8, 13, -12, -7, 37, -6, -30, -31, 40, 1, -26, 32, -6, -17, 9, -6, -20, -18, 12, 3, 24, -17, -22, -9, 27, -5, -2, -6, 11, -3, -9, -30, -5, -2, -14, 14, 24, 1, -37, -8, 19, 2, -23, -9, -6, -5, 2, -6, -2, 1, -14, 26, 24, -19, -20, -26, 16, -9, -39, 11, 11, -2, 5, 2, 16, -9, -13, 3, 13, -18, -51, -10, 23, -2, -43, -15, -2, 35, -2, -1, -5, -17, -10, 5, 8, -15, -15, -28, -9, 29, -16, 13, -23, -13, -4, -16, -6, -10, -8, -6, 19, -18, -24, -11, 13, 17, -24, 5, -13, -14, 5, -18, 12, -25, -5, 43, 39, 9, -6, -43, 3, 16, -30, 13, 11, -7, 1, -33, -16, -4, -4, 11, 37, -15, -29, -18, 12, 10, -36, 13, 18, -10, -12, -7, 20, -24, -8, 12, 34, -13, -14, -38, 20, -13, -17, 21, 0, 4, 0, -26, 4, -15, -10, 17, 30, -23, -32, -14, 36, 20, -33, -7, -11, -11, 1, -25, 8, 7, -21, 8, 35, -32, -17, -15, 26, -3, -34, 0, -22, 2, -14, 0, 8, -10, -7, 3, 35, -13, -11, -4, -2, -15, -33, 27, -2, 8, 20, -19, -16, -6, -8, -7, 27, -4, -9, -10, 12, -20, -14, 7, -9, -12, 11, -24, -2, -13, -9, 18, 36, -5, -31, -7, 21, 19, -33, 3, -23, 0, 10, 11, 2, 7, -16, 13, 22, -23, -33, -21, -9, -7, -4, 9, -9, 4, 6, -26, 2, -24, -6, 20, 32, -7, -10, 0, -2, 5, -41, 14, -3, 6, -17, -5, -10, -14, 28, 2, 20, -3, -23, -37, 21, -8, -42, 11, 0, -8, -5, -3, -6, -17, -22, -5, 34, 1, -30, -25, 29, 9, -33, -8, 3, -35, -16, -2, 7, -3, 7, 16, 29, -7, -6, 0, 43, -5, -45, -7, -18, -17, 2, 30, -12, -6, -21, 0, 12, 12, -14, -10, 11, 5, -25, 1, 11, -10, -9, -14, -2, 4, -28, -4, 51, -18, -38, -13, -1, 7, -29, 22, -9, 7, 2, -5, 20, -18, -10, 1, 48, -8, -5, -4, 9, 8, -34, 25, -28, 5, -5, -21, 23, 21, -34, 6, 6, 3, -29, -24, 17, -9, -51, 22, -7, 16, 9, 23, -10, -15, 15, 24, 32, -7, -17, -2, 16, 5, -29, 4, -15, 0, -8, 9, -12, -14, 4, 18, 33, -23, -36, -23, 5, 7, -40, -1, -18, 12, 2, -22, 5, 7, -16, 10, 25, -16, -16, -3, -1, 12, -15, 12, 15, 0, -3, -4, -12, -22, -17, 12, 52, 1, -27, -7, 16, -9, -9, -2, 1, -16, -4, -16, 19, -36, 1, 16, 28, -4, -23, -35, 39, -5, -36, 8, 6, -14, -13, -33, 5, 11, -9, 5, 17, -17, -35, -12, 18, -9, -20, 27, -3, 18, -10, -35, -17, -3, 3, 17, 22, 0, -52, -22, 28, 12, -22, -8, -7, 4, -14, -15, 5, 7, -2, 23, 16, -19, -9, -1, 18, -8, -19, 15, 1, -5, -19, -3, -7, -19, 9, 17, 37, 6, -46, 0, 4, 12, -10, -9, -22, -19, -1, 7, -16, -11, -3, 28, 38, -29, -7, -23, 0, 7, -27, -18, -20, -1, 7, -15, 27, 15, -1, 1, 17, 4, -33, -12, 8, 14, -30, 1, -6, 0, 24, 4, 4, -25, -1, -1, 15, -19, -35, -13, 2, 17, -49, 16, -12, -9, -1, 1, 9, -25, -14, 6, 30, 19, -18, -18, 2, -12, -44, -3, 14, -20, 7, -33, -4, 2, -16, 10, 23, -5, -30, -8, 28, -15, -22, 26, -11, -8, 6, -5, 18, 5, 12, 4, 37, 12, -5, -27, 56, -12, -20, 22, -5, 7, 12, -6, -7, -15, -5, 18, 53, 13, -15, -1, 32, 17, -24, 5, -12, -8, 0, -3, -5, -2, -6, 23, 32, -3, -7, -11, 4, -9, -39, 1, -13, -2, -9, -23, -2, 8, -14, 5, 24, -42, 2, -9, -8, -12, -40, 4, -28, -15, -23, 9, 4, -16, 0, 12, 26, -6, -32, -8, 9, 17, -29, -5, -17, -16, -2, -17, 12, 8, -10, -8, 11, -16, -46, -43, 7, 31, -14, -10, -23, -2, -4, -20, 2, -8, -7, 7, 32, -28, -11, -5, 15, 8, -14, 6, -23, -22, -8, -19, 26, -7, 1, 14, 30, 21, -14, -4, 10, 0, -3, 7, -9, 10, -19, -12, 4, -16, -13, 16, 30, -18, -18, -34, 14, 6, -34, 11, 8, 7, 7, -6, 8, -26, 18, -17, 28, -4, -7, -26, 3, 1, -20, 6, -15, 4, -5, -35, 7, -11, 8, 11, 14, -3, -9, -9, 3, 23, -6, 10, -17, -9, -21, -6, 16, 10, -2, -3, 21, -6, -27, -11, 2, 15, -11, 10, 7, -12, -13, -16, 2, -20, 11, 35, 24, -12, -1, -9, -10, 11, -30, 31, -18, -10, -20, -6, 13, 3, -16, 21, 27, -1, -39, 6, 11, 5, -18, 5, -1, 15, 3, -5, -13, -18, -20, 4, 33, -34, -44, -11, -1, 3, -29, 21, -16, -27, 27, -35, 6, -10, -11, -1, 17, -22, -32, -10, 6, -10, -21, 11, -25, -19, 7, -17, -8, 9, 21, 14, 26, 1, -8, -2, 12, -21, -30, 0, -20, 1, 1, -41, -19, -21, -7, 17, 7, 5, -28, 2, 22, -4, -29, 23, -2, 2, -24, -16, 2, -14, 3, 23, 27, -24, -45, -29, 26, -11, -26, -15, -8, 7, 2, 1, -4, -28, -5, 1, 40, 2, -5, -17, 13, 17, -28, 13, -10, -12, -8, -6, -19, 4, -3, 17, 14, 0, -31, -19, 25, 6, -18, -7, -22, 5, 2, -14, -12, 2, 2, 19, 50, 9, -22, 3, -1, -11, -20, 21, -24, -8, 7, -10, 15, 1, 14, 11, 20, -2, -44, -3, -1, 9, -27, -1, -28, -5, 8, 0, -3, -18, -37, 12, 20, -8, -11, -41, -1, 18, -36, 8, -9, 13, -1, -25, 25, -17, -19, 22, 23, -20, -30, -25, 5, 1, -40, 24, -31, -22, 19, 1, 6, -1, -10, 11, 27, -25, -15, -3, -11, -2, -43, 13, 3, -7, -32, 9, 1, -29, -18, -7, 37, -24, -43, -2, 15, -25, -31, -2, 12, -14, 0, 13, 1, -24, 12, -4, -3, -8, -6, -35, 2, 3, -30, 11, 2, -24, -4, -16, 3, 6, -19, 34, 43, -14, -36, -1, 24, 14, -19, 11, -11, -23, -15, 16, 13, -37, -12, -5, 24, 4, -44, -10, 10, -5, -37, 7, -11, -6, -1, -16, 19, 2, -30, 20, 27, -6, -29, -8, 21, 19, -15, 0, -22, -16, -14, 6, 6, -22, -15, 8, 20, -15, -12, -27, 25, 22, -35, 2, -13, 6, -17, -22, -5, -11, -2, 26, 51, -13, -21, 2, -13, 10, -34, 14, 5, -18, 7, -22, -6, -20, 2, 7, 23, -16, -21, -7, 14, -8, -22, 11, -19, 5, 12, -35, 24, -18, 3, 16, 35, -5, -14, -18, -17, 0, -27, -8, -13, -20, 3, -11, 19, -4, -6, 20, 22, -5, -26, -6, 11, 8, -39, 24, -6, -8, -18, -35, 12, -43, -6, 11, 31, 5, -14, -35, 28, -7, -45, -14, -1, -20, -12, -16, 17, 2, 2, -13, 9, -4, -46, -28, 25, -18, -37, -2, -17, -1, -25, -21, -5, 5, 3, 10, 31, 6, -3, -12, 35, 5, -23, -1, -12, -9, -13, 0, 7, 0, 4, 3, 46, -4, -10, -39, 34, -6, -15, -2, -9, 8, -1, -7, -7, -19, -19, 26, 44, -12, -33, 6, 9, -17, -45, -21, 2, -14, 5, 2, 18, -18, -1, 0, 43, 2, -1, -14, 25, -12, -35, 5, -18, 17, -15, -1, 23, -14, 17, 15, 30, -27, -25, -18, 33, 5, -36, 4, -17, 9, -16, -11, -11, -21, -10, 18, 44, -23, 2, -20, 25, -26, -39, -8, -9, -11, -31, -16, 22, -3, 4, 26, 43, -15, -40, -6, -7, -9, -42, 8, 7, -19, -16, -56, -4, 6, -27, -6, 38, 7, -21, 7, 34, -16, -18, 7, -3, -3, 17, -14, -3, 8, 13, -5, 14, -17, -22, -32, 29, 1, -35, 14, -10, -6, 15, -27, 15, 37, 28, 19, 37, -42, -52, -67, 43, 13, -51, 12, -13, -24}

#define TENSOR_DENSE_KERNEL_0_DEC_BITS {9}

#define TENSOR_DENSE_BIAS_0 {-67}

#define TENSOR_DENSE_BIAS_0_DEC_BITS {13}

#define DENSE_BIAS_LSHIFT {3}

#define DENSE_OUTPUT_RSHIFT {13}


/* output q format for each layer */
#define INPUT_1_OUTPUT_DEC 7
#define INPUT_1_OUTPUT_OFFSET 0
#define CONV1D_OUTPUT_DEC 3
#define CONV1D_OUTPUT_OFFSET 0
#define CONV1D_1_OUTPUT_DEC 3
#define CONV1D_1_OUTPUT_OFFSET 0
#define CONV1D_2_OUTPUT_DEC 3
#define CONV1D_2_OUTPUT_OFFSET 0
#define BATCH_NORMALIZATION_OUTPUT_DEC 3
#define BATCH_NORMALIZATION_OUTPUT_OFFSET 0
#define BATCH_NORMALIZATION_1_OUTPUT_DEC 3
#define BATCH_NORMALIZATION_1_OUTPUT_OFFSET 0
#define BATCH_NORMALIZATION_2_OUTPUT_DEC 3
#define BATCH_NORMALIZATION_2_OUTPUT_OFFSET 0
#define RE_LU_OUTPUT_DEC 3
#define RE_LU_OUTPUT_OFFSET 0
#define RE_LU_1_OUTPUT_DEC 3
#define RE_LU_1_OUTPUT_OFFSET 0
#define RE_LU_2_OUTPUT_DEC 3
#define RE_LU_2_OUTPUT_OFFSET 0
#define DROPOUT_OUTPUT_DEC 3
#define DROPOUT_OUTPUT_OFFSET 0
#define DROPOUT_1_OUTPUT_DEC 3
#define DROPOUT_1_OUTPUT_OFFSET 0
#define DROPOUT_2_OUTPUT_DEC 3
#define DROPOUT_2_OUTPUT_OFFSET 0
#define MAX_POOLING1D_OUTPUT_DEC 3
#define MAX_POOLING1D_OUTPUT_OFFSET 0
#define MAX_POOLING1D_1_OUTPUT_DEC 3
#define MAX_POOLING1D_1_OUTPUT_OFFSET 0
#define MAX_POOLING1D_2_OUTPUT_DEC 3
#define MAX_POOLING1D_2_OUTPUT_OFFSET 0
#define CONCATENATE_OUTPUT_DEC 3
#define CONCATENATE_OUTPUT_OFFSET 0
#define CONV1D_3_OUTPUT_DEC 3
#define CONV1D_3_OUTPUT_OFFSET 0
#define BATCH_NORMALIZATION_3_OUTPUT_DEC 3
#define BATCH_NORMALIZATION_3_OUTPUT_OFFSET 0
#define RE_LU_3_OUTPUT_DEC 3
#define RE_LU_3_OUTPUT_OFFSET 0
#define DROPOUT_3_OUTPUT_DEC 3
#define DROPOUT_3_OUTPUT_OFFSET 0
#define MAX_POOLING1D_3_OUTPUT_DEC 3
#define MAX_POOLING1D_3_OUTPUT_OFFSET 0
#define GRU_OUTPUT_DEC 7
#define GRU_OUTPUT_OFFSET 0
#define GRU_1_OUTPUT_DEC 7
#define GRU_1_OUTPUT_OFFSET 0
#define FLATTEN_OUTPUT_DEC 7
#define FLATTEN_OUTPUT_OFFSET 0
#define DROPOUT_4_OUTPUT_DEC 7
#define DROPOUT_4_OUTPUT_OFFSET 0
#define DENSE_OUTPUT_DEC 3
#define DENSE_OUTPUT_OFFSET 0
#define ACTIVATION_OUTPUT_DEC 3
#define ACTIVATION_OUTPUT_OFFSET 0

/* bias shift and output shift for none-weighted layer */

/* tensors and configurations for each layer */
static int8_t nnom_input_data[1250] = {0};

const nnom_shape_data_t tensor_input_1_0_dim[] = {1250, 1};
const nnom_qformat_param_t tensor_input_1_0_dec[] = {7};
const nnom_qformat_param_t tensor_input_1_0_offset[] = {0};
const nnom_tensor_t tensor_input_1_0 = {
    .p_data = (void*)nnom_input_data,
    .dim = (nnom_shape_data_t*)tensor_input_1_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_input_1_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_input_1_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};

const nnom_io_config_t input_1_config = {
    .super = {.name = "input_1"},
    .tensor = (nnom_tensor_t*)&tensor_input_1_0
};
const int8_t tensor_conv1d_kernel_0_data[] = TENSOR_CONV1D_KERNEL_0;

const nnom_shape_data_t tensor_conv1d_kernel_0_dim[] = {5, 1, 16};
const nnom_qformat_param_t tensor_conv1d_kernel_0_dec[] = TENSOR_CONV1D_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv1d_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv1d_kernel_0 = {
    .p_data = (void*)tensor_conv1d_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv1d_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv1d_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv1d_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 3,
    .bitwidth = 8
};
const int8_t tensor_conv1d_bias_0_data[] = TENSOR_CONV1D_BIAS_0;

const nnom_shape_data_t tensor_conv1d_bias_0_dim[] = {16};
const nnom_qformat_param_t tensor_conv1d_bias_0_dec[] = TENSOR_CONV1D_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv1d_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv1d_bias_0 = {
    .p_data = (void*)tensor_conv1d_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv1d_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv1d_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv1d_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv1d_output_shift[] = CONV1D_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv1d_bias_shift[] = CONV1D_BIAS_LSHIFT;
const nnom_conv2d_config_t conv1d_config = {
    .super = {.name = "conv1d"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv1d_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv1d_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv1d_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv1d_bias_shift, 
    .filter_size = 16,
    .kernel_size = {5},
    .stride_size = {1},
    .padding_size = {0, 0},
    .dilation_size = {1},
    .padding_type = PADDING_SAME
};
const int8_t tensor_conv1d_1_kernel_0_data[] = TENSOR_CONV1D_1_KERNEL_0;

const nnom_shape_data_t tensor_conv1d_1_kernel_0_dim[] = {9, 1, 16};
const nnom_qformat_param_t tensor_conv1d_1_kernel_0_dec[] = TENSOR_CONV1D_1_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv1d_1_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv1d_1_kernel_0 = {
    .p_data = (void*)tensor_conv1d_1_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv1d_1_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv1d_1_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv1d_1_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 3,
    .bitwidth = 8
};
const int8_t tensor_conv1d_1_bias_0_data[] = TENSOR_CONV1D_1_BIAS_0;

const nnom_shape_data_t tensor_conv1d_1_bias_0_dim[] = {16};
const nnom_qformat_param_t tensor_conv1d_1_bias_0_dec[] = TENSOR_CONV1D_1_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv1d_1_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv1d_1_bias_0 = {
    .p_data = (void*)tensor_conv1d_1_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv1d_1_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv1d_1_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv1d_1_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv1d_1_output_shift[] = CONV1D_1_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv1d_1_bias_shift[] = CONV1D_1_BIAS_LSHIFT;
const nnom_conv2d_config_t conv1d_1_config = {
    .super = {.name = "conv1d_1"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv1d_1_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv1d_1_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv1d_1_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv1d_1_bias_shift, 
    .filter_size = 16,
    .kernel_size = {9},
    .stride_size = {1},
    .padding_size = {0, 0},
    .dilation_size = {1},
    .padding_type = PADDING_SAME
};
const int8_t tensor_conv1d_2_kernel_0_data[] = TENSOR_CONV1D_2_KERNEL_0;

const nnom_shape_data_t tensor_conv1d_2_kernel_0_dim[] = {13, 1, 8};
const nnom_qformat_param_t tensor_conv1d_2_kernel_0_dec[] = TENSOR_CONV1D_2_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv1d_2_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv1d_2_kernel_0 = {
    .p_data = (void*)tensor_conv1d_2_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv1d_2_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv1d_2_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv1d_2_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 3,
    .bitwidth = 8
};
const int8_t tensor_conv1d_2_bias_0_data[] = TENSOR_CONV1D_2_BIAS_0;

const nnom_shape_data_t tensor_conv1d_2_bias_0_dim[] = {8};
const nnom_qformat_param_t tensor_conv1d_2_bias_0_dec[] = TENSOR_CONV1D_2_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv1d_2_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv1d_2_bias_0 = {
    .p_data = (void*)tensor_conv1d_2_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv1d_2_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv1d_2_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv1d_2_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv1d_2_output_shift[] = CONV1D_2_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv1d_2_bias_shift[] = CONV1D_2_BIAS_LSHIFT;
const nnom_conv2d_config_t conv1d_2_config = {
    .super = {.name = "conv1d_2"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv1d_2_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv1d_2_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv1d_2_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv1d_2_bias_shift, 
    .filter_size = 8,
    .kernel_size = {13},
    .stride_size = {2},
    .padding_size = {0, 0},
    .dilation_size = {1},
    .padding_type = PADDING_SAME
};

const nnom_pool_config_t max_pooling1d_config = {
    .super = {.name = "max_pooling1d"},
    .padding_type = PADDING_VALID,
    .output_shift = 0,
    .kernel_size = {4},
    .stride_size = {4},
    .num_dim = 1
};

const nnom_pool_config_t max_pooling1d_1_config = {
    .super = {.name = "max_pooling1d_1"},
    .padding_type = PADDING_VALID,
    .output_shift = 0,
    .kernel_size = {4},
    .stride_size = {4},
    .num_dim = 1
};

const nnom_pool_config_t max_pooling1d_2_config = {
    .super = {.name = "max_pooling1d_2"},
    .padding_type = PADDING_VALID,
    .output_shift = 0,
    .kernel_size = {2},
    .stride_size = {2},
    .num_dim = 1
};

const nnom_concat_config_t concatenate_config = {
    .super = {.name = "concatenate"},
    .axis = -1
};
const int8_t tensor_conv1d_3_kernel_0_data[] = TENSOR_CONV1D_3_KERNEL_0;

const nnom_shape_data_t tensor_conv1d_3_kernel_0_dim[] = {3, 40, 12};
const nnom_qformat_param_t tensor_conv1d_3_kernel_0_dec[] = TENSOR_CONV1D_3_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv1d_3_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv1d_3_kernel_0 = {
    .p_data = (void*)tensor_conv1d_3_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv1d_3_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv1d_3_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv1d_3_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 3,
    .bitwidth = 8
};
const int8_t tensor_conv1d_3_bias_0_data[] = TENSOR_CONV1D_3_BIAS_0;

const nnom_shape_data_t tensor_conv1d_3_bias_0_dim[] = {12};
const nnom_qformat_param_t tensor_conv1d_3_bias_0_dec[] = TENSOR_CONV1D_3_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv1d_3_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv1d_3_bias_0 = {
    .p_data = (void*)tensor_conv1d_3_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv1d_3_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv1d_3_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv1d_3_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv1d_3_output_shift[] = CONV1D_3_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv1d_3_bias_shift[] = CONV1D_3_BIAS_LSHIFT;
const nnom_conv2d_config_t conv1d_3_config = {
    .super = {.name = "conv1d_3"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv1d_3_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv1d_3_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv1d_3_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv1d_3_bias_shift, 
    .filter_size = 12,
    .kernel_size = {3},
    .stride_size = {1},
    .padding_size = {0, 0},
    .dilation_size = {1},
    .padding_type = PADDING_SAME
};

const nnom_pool_config_t max_pooling1d_3_config = {
    .super = {.name = "max_pooling1d_3"},
    .padding_type = PADDING_VALID,
    .output_shift = 0,
    .kernel_size = {2},
    .stride_size = {2},
    .num_dim = 1
};
const int8_t tensor_gru_gru_cell_kernel_0_data[] = TENSOR_GRU_GRU_CELL_KERNEL_0;

const nnom_shape_data_t tensor_gru_gru_cell_kernel_0_dim[] = {12, 48};
const nnom_qformat_param_t tensor_gru_gru_cell_kernel_0_dec[] = TENSOR_GRU_GRU_CELL_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_gru_gru_cell_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_gru_gru_cell_kernel_0 = {
    .p_data = (void*)tensor_gru_gru_cell_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_gru_gru_cell_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_gru_gru_cell_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_gru_gru_cell_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_gru_gru_cell_recurrent_kernel_0_data[] = TENSOR_GRU_GRU_CELL_RECURRENT_KERNEL_0;

const nnom_shape_data_t tensor_gru_gru_cell_recurrent_kernel_0_dim[] = {16, 48};
const nnom_qformat_param_t tensor_gru_gru_cell_recurrent_kernel_0_dec[] = TENSOR_GRU_GRU_CELL_RECURRENT_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_gru_gru_cell_recurrent_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_gru_gru_cell_recurrent_kernel_0 = {
    .p_data = (void*)tensor_gru_gru_cell_recurrent_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_gru_gru_cell_recurrent_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_gru_gru_cell_recurrent_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_gru_gru_cell_recurrent_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_gru_gru_cell_bias_0_data[] = TENSOR_GRU_GRU_CELL_BIAS_0;

const nnom_shape_data_t tensor_gru_gru_cell_bias_0_dim[] = {2, 48};
const nnom_qformat_param_t tensor_gru_gru_cell_bias_0_dec[] = TENSOR_GRU_GRU_CELL_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_gru_gru_cell_bias_0_offset[] = {0};
const nnom_tensor_t tensor_gru_gru_cell_bias_0 = {
    .p_data = (void*)tensor_gru_gru_cell_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_gru_gru_cell_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_gru_gru_cell_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_gru_gru_cell_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};

const nnom_gru_cell_config_t gru_gru_cell_config = {
    .super = {.name = "gru"},
    .weights = (nnom_tensor_t*)&tensor_gru_gru_cell_kernel_0,
    .recurrent_weights = (nnom_tensor_t*)&tensor_gru_gru_cell_recurrent_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_gru_gru_cell_bias_0,
    .q_dec_z = 3,
    .q_dec_h = 7,
    .units = 16
};

const nnom_rnn_config_t gru_config = {
    .super = {.name = "gru"},
    .return_sequence = true,
    .stateful = false,
    .go_backwards = false
};
const int8_t tensor_gru_1_gru_cell_1_kernel_0_data[] = TENSOR_GRU_1_GRU_CELL_1_KERNEL_0;

const nnom_shape_data_t tensor_gru_1_gru_cell_1_kernel_0_dim[] = {16, 48};
const nnom_qformat_param_t tensor_gru_1_gru_cell_1_kernel_0_dec[] = TENSOR_GRU_1_GRU_CELL_1_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_gru_1_gru_cell_1_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_gru_1_gru_cell_1_kernel_0 = {
    .p_data = (void*)tensor_gru_1_gru_cell_1_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_gru_1_gru_cell_1_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_gru_1_gru_cell_1_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_gru_1_gru_cell_1_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_gru_1_gru_cell_1_recurrent_kernel_0_data[] = TENSOR_GRU_1_GRU_CELL_1_RECURRENT_KERNEL_0;

const nnom_shape_data_t tensor_gru_1_gru_cell_1_recurrent_kernel_0_dim[] = {16, 48};
const nnom_qformat_param_t tensor_gru_1_gru_cell_1_recurrent_kernel_0_dec[] = TENSOR_GRU_1_GRU_CELL_1_RECURRENT_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_gru_1_gru_cell_1_recurrent_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_gru_1_gru_cell_1_recurrent_kernel_0 = {
    .p_data = (void*)tensor_gru_1_gru_cell_1_recurrent_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_gru_1_gru_cell_1_recurrent_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_gru_1_gru_cell_1_recurrent_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_gru_1_gru_cell_1_recurrent_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_gru_1_gru_cell_1_bias_0_data[] = TENSOR_GRU_1_GRU_CELL_1_BIAS_0;

const nnom_shape_data_t tensor_gru_1_gru_cell_1_bias_0_dim[] = {2, 48};
const nnom_qformat_param_t tensor_gru_1_gru_cell_1_bias_0_dec[] = TENSOR_GRU_1_GRU_CELL_1_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_gru_1_gru_cell_1_bias_0_offset[] = {0};
const nnom_tensor_t tensor_gru_1_gru_cell_1_bias_0 = {
    .p_data = (void*)tensor_gru_1_gru_cell_1_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_gru_1_gru_cell_1_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_gru_1_gru_cell_1_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_gru_1_gru_cell_1_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};

const nnom_gru_cell_config_t gru_1_gru_cell_config = {
    .super = {.name = "gru_1"},
    .weights = (nnom_tensor_t*)&tensor_gru_1_gru_cell_1_kernel_0,
    .recurrent_weights = (nnom_tensor_t*)&tensor_gru_1_gru_cell_1_recurrent_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_gru_1_gru_cell_1_bias_0,
    .q_dec_z = 5,
    .q_dec_h = 7,
    .units = 16
};

const nnom_rnn_config_t gru_1_config = {
    .super = {.name = "gru_1"},
    .return_sequence = true,
    .stateful = false,
    .go_backwards = false
};

const nnom_flatten_config_t flatten_config = {
    .super = {.name = "flatten"}
};
const int8_t tensor_dense_kernel_0_data[] = TENSOR_DENSE_KERNEL_0;

const nnom_shape_data_t tensor_dense_kernel_0_dim[] = {2496, 1};
const nnom_qformat_param_t tensor_dense_kernel_0_dec[] = TENSOR_DENSE_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_kernel_0 = {
    .p_data = (void*)tensor_dense_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_bias_0_data[] = TENSOR_DENSE_BIAS_0;

const nnom_shape_data_t tensor_dense_bias_0_dim[] = {1};
const nnom_qformat_param_t tensor_dense_bias_0_dec[] = TENSOR_DENSE_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_bias_0 = {
    .p_data = (void*)tensor_dense_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_output_shift[] = DENSE_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_bias_shift[] = DENSE_BIAS_LSHIFT;
const nnom_dense_config_t dense_config = {
    .super = {.name = "dense"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_bias_shift
};
static int8_t nnom_output_data[1] = {0};

const nnom_shape_data_t tensor_output0_dim[] = {1};
const nnom_qformat_param_t tensor_output0_dec[] = {ACTIVATION_OUTPUT_DEC};
const nnom_qformat_param_t tensor_output0_offset[] = {0};
const nnom_tensor_t tensor_output0 = {
    .p_data = (void*)nnom_output_data,
    .dim = (nnom_shape_data_t*)tensor_output0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_output0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_output0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_io_config_t output0_config = {
    .super = {.name = "output0"},
    .tensor = (nnom_tensor_t*)&tensor_output0
};
/* model version */
#define NNOM_MODEL_VERSION (10000*0 + 100*4 + 3)

/* nnom model */
static nnom_model_t* nnom_model_create(void)
{
	static nnom_model_t model;
	nnom_layer_t* layer[20];

	check_model_version(NNOM_MODEL_VERSION);
	new_model(&model);

	layer[0] = input_s(&input_1_config);
	layer[1] = model.hook(conv2d_s(&conv1d_config), layer[0]);
	layer[2] = model.hook(conv2d_s(&conv1d_1_config), layer[0]);
	layer[3] = model.hook(conv2d_s(&conv1d_2_config), layer[0]);
	layer[4] = model.active(act_relu(), layer[1]);
	layer[5] = model.active(act_relu(), layer[2]);
	layer[6] = model.active(act_relu(), layer[3]);
	layer[7] = model.hook(maxpool_s(&max_pooling1d_config), layer[4]);
	layer[8] = model.hook(maxpool_s(&max_pooling1d_1_config), layer[5]);
	layer[9] = model.hook(maxpool_s(&max_pooling1d_2_config), layer[6]);
	layer[10] = model.mergex(concat_s(&concatenate_config), 3 ,layer[7] ,layer[8] ,layer[9]);
	layer[11] = model.hook(conv2d_s(&conv1d_3_config), layer[10]);
	layer[12] = model.active(act_relu(), layer[11]);
	layer[13] = model.hook(maxpool_s(&max_pooling1d_3_config), layer[12]);
	layer[14] = model.hook(rnn_s(gru_cell_s(&gru_gru_cell_config), &gru_config), layer[13]);
	layer[15] = model.hook(rnn_s(gru_cell_s(&gru_1_gru_cell_config), &gru_1_config), layer[14]);
	layer[16] = model.hook(flatten_s(&flatten_config), layer[15]);
	layer[17] = model.hook(dense_s(&dense_config), layer[16]);
	layer[18] = model.active(act_sigmoid(DENSE_OUTPUT_DEC), layer[17]);
	layer[19] = model.hook(output_s(&output0_config), layer[18]);
	model_compile(&model, layer[0], layer[19]);
	return &model;
}
